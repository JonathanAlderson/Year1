// This file is part of coursework 2 for COMP1212
// which follows the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// Written by Sam Wilson

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load=1, then
 * the x value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM512 {
    IN x[16], load, address[9];
    OUT out[16];

    PARTS:
      RAM64(x=x,load=load1,address=address[0..5],out=output0);
      RAM64(x=x,load=load2,address=address[0..5],out=output1);
      RAM64(x=x,load=load3,address=address[0..5],out=output2);
      RAM64(x=x,load=load4,address=address[0..5],out=output3);
      RAM64(x=x,load=load5,address=address[0..5],out=output4);
      RAM64(x=x,load=load6,address=address[0..5],out=output5);
      RAM64(x=x,load=load7,address=address[0..5],out=output6);
      RAM64(x=x,load=load8,address=address[0..5],out=output7);

      DMux8Way(in=load, s=load1, t=load2, u=load3, v=load4, w=load5, x=load6, y=load7, z=load8, sel=address[6..8]);
      Mux8Way16(s=output0,t=output1,u=output2,v=output3,w=output4,x=output5,y=output6,z=output7,sel=address[6..8],out=out);


}
